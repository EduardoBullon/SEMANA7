<% 
const title = 'Mi Perfil - Auth App';
// user data will be passed from route
%>

<%- include('partials/header', { title, user }) %>

<div class="row">
    <div class="col s12">
        <h3>
            <i class="material-icons left large">person</i>
            Mi Perfil
        </h3>
        <p class="grey-text">Gestiona tu información personal</p>
    </div>
</div>

<div class="row">
    <div class="col s12 l8">
        <div class="card profile-form">
            <div class="card-content">
                <span class="card-title">
                    <i class="material-icons left">edit</i>
                    Editar Información
                </span>
                
                <form id="profileForm" onsubmit="handleUpdateProfile(event)">
                    <div class="row">
                        <div class="input-field col s12 m6">
                            <i class="material-icons prefix">person</i>
                            <input id="name" name="name" type="text" class="validate" value="<%= user.name || '' %>" required>
                            <label for="name" class="active">Nombre</label>
                        </div>
                        
                        <div class="input-field col s12 m6">
                            <i class="material-icons prefix">person_outline</i>
                            <input id="lastName" name="lastName" type="text" class="validate" value="<%= user.lastName || '' %>" required>
                            <label for="lastName" class="active">Apellido</label>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="input-field col s12 m6">
                            <i class="material-icons prefix">email</i>
                            <input id="email" name="email" type="email" class="validate" value="<%= user.email %>" disabled>
                            <label for="email" class="active">Email (no editable)</label>
                        </div>
                        
                        <div class="input-field col s12 m6">
                            <i class="material-icons prefix">phone</i>
                            <input id="phoneNumber" name="phoneNumber" type="tel" class="validate" value="<%= user.phoneNumber || '' %>" required>
                            <label for="phoneNumber" class="active">Teléfono</label>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="input-field col s12 m6">
                            <i class="material-icons prefix">cake</i>
                            <input id="birthdate" name="birthdate" type="text" class="datepicker validate" value="<%= user.birthdate ? user.birthdate.toISOString().split('T')[0] : '' %>" required>
                            <label for="birthdate" class="active">Fecha de Nacimiento</label>
                        </div>
                        
                        <div class="input-field col s12 m6">
                            <i class="material-icons prefix">link</i>
                            <input id="url_profile" name="url_profile" type="url" class="validate" value="<%= user.url_profile || '' %>">
                            <label for="url_profile" class="active">URL Perfil</label>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="input-field col s12">
                            <i class="material-icons prefix">home</i>
                            <textarea id="address" name="address" class="materialize-textarea validate"><%= user.address || '' %></textarea>
                            <label for="address" class="active">Dirección</label>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col s12 center-align">
                            <button class="btn waves-effect waves-light btn-large blue" type="submit">
                                <i class="material-icons left">save</i>
                                Guardar Cambios
                            </button>
                        </div>
                    </div>
                </form>
                
                <div id="errorMessage" class="error-message" style="display: none;"></div>
                <div id="successMessage" class="success-message" style="display: none;"></div>
            </div>
        </div>
    </div>
    
    <div class="col s12 l4">
        <!-- Account Info Card -->
        <div class="card user-info-card">
            <div class="card-content">
                <span class="card-title">
                    <i class="material-icons left">info</i>
                    Información de Cuenta
                </span>
                
                <p><strong>ID de Usuario:</strong> <%= user.id %></p>
                <p><strong>Email:</strong> <%= user.email %></p>
                <p><strong>Roles:</strong> 
                    <% user.roles.forEach(role => { %>
                        <span class="chip <%= role === 'admin' ? 'red' : 'green' %> white-text">
                            <i class="material-icons left"><%= role === 'admin' ? 'admin_panel_settings' : 'person' %></i>
                            <%= role %>
                        </span>
                    <% }); %>
                </p>
                <p><strong>Miembro desde:</strong> <%= user.createdAt ? new Date(user.createdAt).toLocaleDateString('es-ES') : 'No disponible' %></p>
            </div>
        </div>
        
        <!-- Quick Actions Card -->
        <div class="card">
            <div class="card-content">
                <span class="card-title">
                    <i class="material-icons left">settings</i>
                    Acciones Rápidas
                </span>
                
                <div class="collection">
                    <% if (user.roles.includes('admin')) { %>
                        <a href="/dashboard/admin" class="collection-item">
                            <i class="material-icons left">admin_panel_settings</i>
                            Dashboard Admin
                        </a>
                    <% } else { %>
                        <a href="/dashboard/user" class="collection-item">
                            <i class="material-icons left">dashboard</i>
                            Mi Dashboard
                        </a>
                    <% } %>
                    <a href="#" onclick="showChangePasswordModal()" class="collection-item">
                        <i class="material-icons left">lock</i>
                        Cambiar Contraseña
                    </a>
                    <a href="#" onclick="logout()" class="collection-item red-text">
                        <i class="material-icons left">exit_to_app</i>
                        Cerrar Sesión
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Change Password Modal -->
<div id="passwordModal" class="modal">
    <div class="modal-content">
        <h4><i class="material-icons left">lock</i>Cambiar Contraseña</h4>
        <form id="passwordForm" onsubmit="handleChangePassword(event)">
            <div class="row">
                <div class="input-field col s12">
                    <i class="material-icons prefix">lock_outline</i>
                    <input id="currentPassword" name="currentPassword" type="password" class="validate" required>
                    <label for="currentPassword">Contraseña Actual</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    <i class="material-icons prefix">lock</i>
                    <input id="newPassword" name="newPassword" type="password" class="validate" required minlength="8">
                    <label for="newPassword">Nueva Contraseña</label>
                    <span class="helper-text">Mín. 8 caracteres, 1 mayúscula, 1 dígito, 1 carácter especial</span>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    <i class="material-icons prefix">lock</i>
                    <input id="confirmPassword" name="confirmPassword" type="password" class="validate" required>
                    <label for="confirmPassword">Confirmar Nueva Contraseña</label>
                </div>
            </div>
            <div id="passwordError" class="error-message" style="display: none;"></div>
        </form>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-red btn-flat">Cancelar</a>
        <a href="#!" onclick="document.getElementById('passwordForm').dispatchEvent(new Event('submit'))" class="waves-effect waves-green btn green">Cambiar</a>
    </div>
</div>

<script>
async function handleUpdateProfile(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    
    const errorDiv = document.getElementById('errorMessage');
    const successDiv = document.getElementById('successMessage');
    
    // Clear previous messages
    errorDiv.style.display = 'none';
    successDiv.style.display = 'none';
    
    try {
        AuthApp.showLoading();
        
        const response = await AuthApp.apiRequest('/api/users/me', {
            method: 'PUT',
            body: JSON.stringify(data)
        });
        
        if (response && response.ok) {
            const result = await response.json();
            successDiv.textContent = 'Perfil actualizado exitosamente';
            successDiv.style.display = 'block';
            
            // Update UI with new data if needed
            AuthApp.showToast('Perfil actualizado exitosamente', 'green');
        } else {
            const result = await response.json();
            errorDiv.textContent = result.message || 'Error al actualizar el perfil';
            errorDiv.style.display = 'block';
        }
    } catch (error) {
        errorDiv.textContent = 'Error de conexión. Intenta de nuevo.';
        errorDiv.style.display = 'block';
    } finally {
        AuthApp.hideLoading();
    }
}

function showChangePasswordModal() {
    const modal = M.Modal.getInstance(document.getElementById('passwordModal'));
    modal.open();
}

async function handleChangePassword(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);
    
    const errorDiv = document.getElementById('passwordError');
    errorDiv.style.display = 'none';
    
    // Validate passwords match
    if (data.newPassword !== data.confirmPassword) {
        errorDiv.textContent = 'Las contraseñas no coinciden';
        errorDiv.style.display = 'block';
        return;
    }
    
    // Validate password strength
    const passwordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%\^&*()_+\-=[\]{};':"\\|,.<>/?]).{8,}$/;
    if (!passwordRegex.test(data.newPassword)) {
        errorDiv.textContent = 'La nueva contraseña debe tener al menos 8 caracteres, una mayúscula, un dígito y un carácter especial';
        errorDiv.style.display = 'block';
        return;
    }
    
    try {
        AuthApp.showLoading();
        
        const response = await AuthApp.apiRequest('/api/users/me/password', {
            method: 'PUT',
            body: JSON.stringify({
                currentPassword: data.currentPassword,
                newPassword: data.newPassword
            })
        });
        
        if (response && response.ok) {
            AuthApp.showToast('Contraseña cambiada exitosamente', 'green');
            
            // Close modal and reset form
            const modal = M.Modal.getInstance(document.getElementById('passwordModal'));
            modal.close();
            form.reset();
        } else {
            const result = await response.json();
            errorDiv.textContent = result.message || 'Error al cambiar la contraseña';
            errorDiv.style.display = 'block';
        }
    } catch (error) {
        errorDiv.textContent = 'Error de conexión. Intenta de nuevo.';
        errorDiv.style.display = 'block';
    } finally {
        AuthApp.hideLoading();
    }
}

// Initialize datepicker with current date
document.addEventListener('DOMContentLoaded', function() {
    const birthdateInput = document.getElementById('birthdate');
    if (birthdateInput.value) {
        const currentDate = new Date(birthdateInput.value);
        const datepickers = document.querySelectorAll('.datepicker');
        M.Datepicker.init(datepickers, {
            format: 'yyyy-mm-dd',
            yearRange: [1950, 2010],
            defaultDate: currentDate,
            setDefaultDate: true
        });
    }
});
</script>

<%- include('partials/footer') %>